# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright 2008 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

# We're building a single .a file from files in several
# subdirectories.  We use the "single Makefile, multiple subdirectory"
# automake alternative. We're doing this because we're faking out
# automake and getting it to build for 2 architectures at the same
# time, the PPE (powerpc64) and the SPE.  The easiest way to handle
# the SPE was to just build a static library using automake's built in
# rules, since trying to get libtool to handle two architectures in
# the same tree seemed untenable.

# -*- Makefile -*-
#
# Copyright 2007,2008 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

# -*- Makefile -*-
#
# Copyright 2004,2006,2007,2008,2009 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(gcellspuinclude_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.common \
	$(top_srcdir)/Makefile.common.spu
libspu_PROGRAMS = gcell_all$(EXEEXT)
noinst_PROGRAMS = gcell_runtime_qa$(EXEEXT) gcell_general_qa$(EXEEXT)
subdir = gcell/lib/spu
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/acx_cblas.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/cppunit.m4 \
	$(top_srcdir)/config/gr_check_createfilemapping.m4 \
	$(top_srcdir)/config/gr_check_memalign.m4 \
	$(top_srcdir)/config/gr_check_shm_open.m4 \
	$(top_srcdir)/config/gr_doxygen.m4 \
	$(top_srcdir)/config/gr_fortran.m4 \
	$(top_srcdir)/config/gr_git.m4 \
	$(top_srcdir)/config/gr_gprof.m4 \
	$(top_srcdir)/config/gr_lib64.m4 \
	$(top_srcdir)/config/gr_libgnuradio_core_extra_ldflags.m4 \
	$(top_srcdir)/config/gr_no_undefined.m4 \
	$(top_srcdir)/config/gr_omnithread.m4 \
	$(top_srcdir)/config/gr_pwin32.m4 \
	$(top_srcdir)/config/gr_python.m4 \
	$(top_srcdir)/config/gr_qwt.m4 \
	$(top_srcdir)/config/gr_qwtplot3d.m4 \
	$(top_srcdir)/config/gr_scripting.m4 \
	$(top_srcdir)/config/gr_set_md_cpu.m4 \
	$(top_srcdir)/config/gr_swig.m4 \
	$(top_srcdir)/config/gr_sysv_shm.m4 \
	$(top_srcdir)/config/gr_version.m4 \
	$(top_srcdir)/config/grc_build.m4 \
	$(top_srcdir)/config/grc_docs.m4 \
	$(top_srcdir)/config/grc_gcell.m4 \
	$(top_srcdir)/config/grc_gnuradio_core.m4 \
	$(top_srcdir)/config/grc_gnuradio_examples.m4 \
	$(top_srcdir)/config/grc_gr_atsc.m4 \
	$(top_srcdir)/config/grc_gr_audio_alsa.m4 \
	$(top_srcdir)/config/grc_gr_audio_jack.m4 \
	$(top_srcdir)/config/grc_gr_audio_oss.m4 \
	$(top_srcdir)/config/grc_gr_audio_osx.m4 \
	$(top_srcdir)/config/grc_gr_audio_portaudio.m4 \
	$(top_srcdir)/config/grc_gr_audio_windows.m4 \
	$(top_srcdir)/config/grc_gr_comedi.m4 \
	$(top_srcdir)/config/grc_gr_cvsd_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_gcell.m4 \
	$(top_srcdir)/config/grc_gr_gpio.m4 \
	$(top_srcdir)/config/grc_gr_gsm_fr_vocoder.m4 \
	$(top_srcdir)/config/grc_gr_msdd6000.m4 \
	$(top_srcdir)/config/grc_gr_noaa.m4 \
	$(top_srcdir)/config/grc_gr_pager.m4 \
	$(top_srcdir)/config/grc_gr_qtgui.m4 \
	$(top_srcdir)/config/grc_gr_radar_mono.m4 \
	$(top_srcdir)/config/grc_gr_radio_astronomy.m4 \
	$(top_srcdir)/config/grc_gr_sounder.m4 \
	$(top_srcdir)/config/grc_gr_trellis.m4 \
	$(top_srcdir)/config/grc_gr_usrp.m4 \
	$(top_srcdir)/config/grc_gr_usrp2.m4 \
	$(top_srcdir)/config/grc_gr_utils.m4 \
	$(top_srcdir)/config/grc_gr_video_sdl.m4 \
	$(top_srcdir)/config/grc_gr_wxgui.m4 \
	$(top_srcdir)/config/grc_grc.m4 \
	$(top_srcdir)/config/grc_gruel.m4 \
	$(top_srcdir)/config/grc_mblock.m4 \
	$(top_srcdir)/config/grc_omnithread.m4 \
	$(top_srcdir)/config/grc_usrp.m4 \
	$(top_srcdir)/config/grc_usrp2.m4 \
	$(top_srcdir)/config/grc_vrt.m4 $(top_srcdir)/config/lf_cc.m4 \
	$(top_srcdir)/config/lf_cxx.m4 \
	$(top_srcdir)/config/lf_warnings.m4 \
	$(top_srcdir)/config/macosx_audiounit.m4 \
	$(top_srcdir)/config/mkstemp.m4 \
	$(top_srcdir)/config/onceonly.m4 $(top_srcdir)/config/pkg.m4 \
	$(top_srcdir)/config/sdl.m4 \
	$(top_srcdir)/config/usrp_fusb_tech.m4 \
	$(top_srcdir)/config/usrp_libusb.m4 \
	$(top_srcdir)/config/usrp_sdcc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libspudir)" "$(DESTDIR)$(libspudir)" \
	"$(DESTDIR)$(gcellspuincludedir)"
libspuLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(libspu_LIBRARIES)
ARFLAGS = cru
libgcell_spu_a_AR = $(AR) $(ARFLAGS)
libgcell_spu_a_LIBADD =
am__objects_1 = gc_delay.$(OBJEXT) gc_spu_jd_queue.$(OBJEXT) \
	spu_buffers.$(OBJEXT) gc_logging.$(OBJEXT) gc_main.$(OBJEXT) \
	gc_random.$(OBJEXT)
am__objects_2 = fft_1d_r2.$(OBJEXT) memset.$(OBJEXT)
am__objects_3 = gcs_fft_1d_r2.$(OBJEXT)
am_libgcell_spu_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
libgcell_spu_a_OBJECTS = $(am_libgcell_spu_a_OBJECTS)
libspuPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(libspu_PROGRAMS) $(noinst_PROGRAMS)
am_gcell_all_OBJECTS = $(am__objects_3)
gcell_all_OBJECTS = $(am_gcell_all_OBJECTS)
gcell_all_DEPENDENCIES = libgcell_spu.a
am__objects_4 = qa_memset.$(OBJEXT)
am_gcell_general_qa_OBJECTS = $(am__objects_4)
gcell_general_qa_OBJECTS = $(am_gcell_general_qa_OBJECTS)
gcell_general_qa_DEPENDENCIES = libgcell_spu.a
am_gcell_runtime_qa_OBJECTS = gcell_runtime_qa.$(OBJEXT)
gcell_runtime_qa_OBJECTS = $(am_gcell_runtime_qa_OBJECTS)
gcell_runtime_qa_DEPENDENCIES = libgcell_spu.a
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgcell_spu_a_SOURCES) $(gcell_all_SOURCES) \
	$(gcell_general_qa_SOURCES) $(gcell_runtime_qa_SOURCES)
DIST_SOURCES = $(libgcell_spu_a_SOURCES) $(gcell_all_SOURCES) \
	$(gcell_general_qa_SOURCES) $(gcell_runtime_qa_SOURCES)
gcellspuincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(gcellspuinclude_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_CPPFLAGS = @ALSA_CPPFLAGS@
ALSA_INCLUDEDIR = @ALSA_INCLUDEDIR@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@

# We're abusing automake, getting it to generate code for two
# architectures under the same tree.  If you've got a better way to do
# this, please let us know
AR = spu-ar
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_CXXFLAGS = @BOOST_CXXFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BUILD_DATE = @BUILD_DATE@
CBLAS_LIBS = @CBLAS_LIBS@
CC = spu-gcc
CCAS = spu-gcc
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = 
COMEDI_CFLAGS = @COMEDI_CFLAGS@
COMEDI_CPPFLAGS = @COMEDI_CPPFLAGS@
COMEDI_INCLUDEDIR = @COMEDI_INCLUDEDIR@
COMEDI_LIBS = @COMEDI_LIBS@
CPP = @CPP@

# Need to override user stuff even though it gives a warning.
# (Otherwise these contain PPE related info.)
CPPFLAGS = 
CPPUNIT_CFLAGS = @CPPUNIT_CFLAGS@
CPPUNIT_CONFIG = @CPPUNIT_CONFIG@
CPPUNIT_CPPFLAGS = @CPPUNIT_CPPFLAGS@
CPPUNIT_INCLUDEDIR = @CPPUNIT_INCLUDEDIR@
CPPUNIT_INCLUDES = @CPPUNIT_INCLUDES@
CPPUNIT_LIBS = @CPPUNIT_LIBS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXX_FOR_BUILD = @CXX_FOR_BUILD@
CYGPATH_W = @CYGPATH_W@
DEFINES = @DEFINES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOCVER = @DOCVER@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFTW3F_CFLAGS = @FFTW3F_CFLAGS@
FFTW3F_CPPFLAGS = @FFTW3F_CPPFLAGS@
FFTW3F_INCLUDEDIR = @FFTW3F_INCLUDEDIR@
FFTW3F_LIBS = @FFTW3F_LIBS@
FGREP = @FGREP@
FLIBS = @FLIBS@
FUSB_TECH = @FUSB_TECH@
GIT = @GIT@
GREP = @GREP@
GR_ARCH_BIGENDIAN = @GR_ARCH_BIGENDIAN@
GR_HAVE_ARPA_INET = @GR_HAVE_ARPA_INET@
GR_HAVE_BYTESWAP = @GR_HAVE_BYTESWAP@
GR_HAVE_NETINET_IN = @GR_HAVE_NETINET_IN@
GR_PREFSDIR = @GR_PREFSDIR@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_CPPFLAGS = @GSL_CPPFLAGS@
GSL_INCLUDEDIR = @GSL_INCLUDEDIR@
GSL_LIBS = @GSL_LIBS@
GUILE = @GUILE@
HAVE_DOT = @HAVE_DOT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IPC_LIBS = @IPC_LIBS@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_CPPFLAGS = @JACK_CPPFLAGS@
JACK_INCLUDEDIR = @JACK_INCLUDEDIR@
JACK_LIBS = @JACK_LIBS@
LD = spu-ld
LDFLAGS = 
LIBGNURADIO_CORE_EXTRA_LDFLAGS = @LIBGNURADIO_CORE_EXTRA_LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUSB_PKG_CONFIG_NAME = @LIBUSB_PKG_CONFIG_NAME@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MD_CPU = @MD_CPU@
MD_SUBCPU = @MD_SUBCPU@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NO_UNDEFINED = @NO_UNDEFINED@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSS_LIBS = @OSS_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PORTAUDIO_CFLAGS = @PORTAUDIO_CFLAGS@
PORTAUDIO_CPPFLAGS = @PORTAUDIO_CPPFLAGS@
PORTAUDIO_INCLUDEDIR = @PORTAUDIO_INCLUDEDIR@
PORTAUDIO_LIBS = @PORTAUDIO_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHONW = @PYTHONW@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
QMAKE_INCLUDES = @QMAKE_INCLUDES@
QTCORE_CFLAGS = @QTCORE_CFLAGS@
QTCORE_CPPFLAGS = @QTCORE_CPPFLAGS@
QTCORE_INCLUDEDIR = @QTCORE_INCLUDEDIR@
QTCORE_LIBS = @QTCORE_LIBS@
QTGUI_CFLAGS = @QTGUI_CFLAGS@
QTGUI_CPPFLAGS = @QTGUI_CPPFLAGS@
QTGUI_INCLUDEDIR = @QTGUI_INCLUDEDIR@
QTGUI_LIBS = @QTGUI_LIBS@
QTOPENGL_CFLAGS = @QTOPENGL_CFLAGS@
QTOPENGL_CPPFLAGS = @QTOPENGL_CPPFLAGS@
QTOPENGL_INCLUDEDIR = @QTOPENGL_INCLUDEDIR@
QTOPENGL_LIBS = @QTOPENGL_LIBS@
QT_INCLUDES = @QT_INCLUDES@
QT_LIBS = @QT_LIBS@
QT_MOC_EXEC = @QT_MOC_EXEC@
QT_UIC_EXEC = @QT_UIC_EXEC@
QWTPLOT3D_CFLAGS = @QWTPLOT3D_CFLAGS@
QWTPLOT3D_LIBS = @QWTPLOT3D_LIBS@
QWT_CFLAGS = @QWT_CFLAGS@
QWT_LIBS = @QWT_LIBS@
RANLIB = spu-ranlib
RELEASE = @RELEASE@
RM_PROG = @RM_PROG@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_CPPFLAGS = @SDL_CPPFLAGS@
SDL_INCLUDEDIR = @SDL_INCLUDEDIR@
SDL_LIBS = @SDL_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHM_OPEN_LIBS = @SHM_OPEN_LIBS@
SPU_GCC_PROG = @SPU_GCC_PROG@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_PYTHON_CPPFLAGS = @SWIG_PYTHON_CPPFLAGS@
SWIG_PYTHON_LIB = @SWIG_PYTHON_LIB@
SWIG_PYTHON_OPT = @SWIG_PYTHON_OPT@
SYSCONFDIR = @SYSCONFDIR@
USB_CFLAGS = @USB_CFLAGS@
USB_CPPFLAGS = @USB_CPPFLAGS@
USB_INCLUDEDIR = @USB_INCLUDEDIR@
USB_INCLUDES = @USB_INCLUDES@
USB_LIBS = @USB_LIBS@
USE_LIBUSB1 = @USE_LIBUSB1@
USRP2_INCLUDES = @USRP2_INCLUDES@
USRP2_LA = @USRP2_LA@
VERSION = @VERSION@
VRT_INCLUDES = @VRT_INCLUDES@
VRT_LA = @VRT_LA@
WINAUDIO_LIBS = @WINAUDIO_LIBS@
XAS = @XAS@
XCC = @XCC@
XDG_UTILS = @XDG_UTILS@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
autoconf_default_CFLAGS = @autoconf_default_CFLAGS@
autoconf_default_CXXFLAGS = @autoconf_default_CXXFLAGS@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_dirs = @build_dirs@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
docs_INCLUDEDIR = @docs_INCLUDEDIR@
docs_INCLUDES = @docs_INCLUDES@
docs_LA = @docs_LA@
docs_LDFLAG = @docs_LDFLAG@
docs_LIBDIRPATH = @docs_LIBDIRPATH@
dvidir = @dvidir@
enable_dot = @enable_dot@
enable_html_docs = @enable_html_docs@
enable_latex_docs = @enable_latex_docs@
enable_xml_docs = @enable_xml_docs@
exec_prefix = @exec_prefix@
gcell_INCLUDEDIR = @gcell_INCLUDEDIR@
gcell_INCLUDES = @gcell_INCLUDES@
gcell_LA = @gcell_LA@
gcell_LDFLAG = @gcell_LDFLAG@
gcell_LIBDIRPATH = @gcell_LIBDIRPATH@
gcell_spu_INCLUDES = @gcell_spu_INCLUDES@
gcell_spu_LA = @gcell_spu_LA@
generate_docs = @generate_docs@
gnuradio_core_I = @gnuradio_core_I@
gnuradio_core_INCLUDEDIR = @gnuradio_core_INCLUDEDIR@
gnuradio_core_INCLUDES = @gnuradio_core_INCLUDES@
gnuradio_core_LA = @gnuradio_core_LA@
gnuradio_core_LDFLAG = @gnuradio_core_LDFLAG@
gnuradio_core_LIBDIRPATH = @gnuradio_core_LIBDIRPATH@
gnuradio_core_PYDIRPATH = @gnuradio_core_PYDIRPATH@
gnuradio_core_SWIGDIRPATH = @gnuradio_core_SWIGDIRPATH@
gnuradio_examples_INCLUDEDIR = @gnuradio_examples_INCLUDEDIR@
gnuradio_examples_INCLUDES = @gnuradio_examples_INCLUDES@
gnuradio_examples_LA = @gnuradio_examples_LA@
gnuradio_examples_LDFLAG = @gnuradio_examples_LDFLAG@
gnuradio_examples_LIBDIRPATH = @gnuradio_examples_LIBDIRPATH@
gr_atsc_INCLUDEDIR = @gr_atsc_INCLUDEDIR@
gr_atsc_INCLUDES = @gr_atsc_INCLUDES@
gr_atsc_LA = @gr_atsc_LA@
gr_atsc_LDFLAG = @gr_atsc_LDFLAG@
gr_atsc_LIBDIRPATH = @gr_atsc_LIBDIRPATH@
gr_audio_alsa_INCLUDEDIR = @gr_audio_alsa_INCLUDEDIR@
gr_audio_alsa_INCLUDES = @gr_audio_alsa_INCLUDES@
gr_audio_alsa_LA = @gr_audio_alsa_LA@
gr_audio_alsa_LDFLAG = @gr_audio_alsa_LDFLAG@
gr_audio_alsa_LIBDIRPATH = @gr_audio_alsa_LIBDIRPATH@
gr_audio_jack_INCLUDEDIR = @gr_audio_jack_INCLUDEDIR@
gr_audio_jack_INCLUDES = @gr_audio_jack_INCLUDES@
gr_audio_jack_LA = @gr_audio_jack_LA@
gr_audio_jack_LDFLAG = @gr_audio_jack_LDFLAG@
gr_audio_jack_LIBDIRPATH = @gr_audio_jack_LIBDIRPATH@
gr_audio_oss_INCLUDEDIR = @gr_audio_oss_INCLUDEDIR@
gr_audio_oss_INCLUDES = @gr_audio_oss_INCLUDES@
gr_audio_oss_LA = @gr_audio_oss_LA@
gr_audio_oss_LDFLAG = @gr_audio_oss_LDFLAG@
gr_audio_oss_LIBDIRPATH = @gr_audio_oss_LIBDIRPATH@
gr_audio_osx_INCLUDEDIR = @gr_audio_osx_INCLUDEDIR@
gr_audio_osx_INCLUDES = @gr_audio_osx_INCLUDES@
gr_audio_osx_LA = @gr_audio_osx_LA@
gr_audio_osx_LDFLAG = @gr_audio_osx_LDFLAG@
gr_audio_osx_LIBDIRPATH = @gr_audio_osx_LIBDIRPATH@
gr_audio_portaudio_INCLUDEDIR = @gr_audio_portaudio_INCLUDEDIR@
gr_audio_portaudio_INCLUDES = @gr_audio_portaudio_INCLUDES@
gr_audio_portaudio_LA = @gr_audio_portaudio_LA@
gr_audio_portaudio_LDFLAG = @gr_audio_portaudio_LDFLAG@
gr_audio_portaudio_LIBDIRPATH = @gr_audio_portaudio_LIBDIRPATH@
gr_audio_windows_INCLUDEDIR = @gr_audio_windows_INCLUDEDIR@
gr_audio_windows_INCLUDES = @gr_audio_windows_INCLUDES@
gr_audio_windows_LA = @gr_audio_windows_LA@
gr_audio_windows_LDFLAG = @gr_audio_windows_LDFLAG@
gr_audio_windows_LIBDIRPATH = @gr_audio_windows_LIBDIRPATH@
gr_comedi_INCLUDEDIR = @gr_comedi_INCLUDEDIR@
gr_comedi_INCLUDES = @gr_comedi_INCLUDES@
gr_comedi_LA = @gr_comedi_LA@
gr_comedi_LDFLAG = @gr_comedi_LDFLAG@
gr_comedi_LIBDIRPATH = @gr_comedi_LIBDIRPATH@
gr_cvsd_vocoder_INCLUDEDIR = @gr_cvsd_vocoder_INCLUDEDIR@
gr_cvsd_vocoder_INCLUDES = @gr_cvsd_vocoder_INCLUDES@
gr_cvsd_vocoder_LA = @gr_cvsd_vocoder_LA@
gr_cvsd_vocoder_LDFLAG = @gr_cvsd_vocoder_LDFLAG@
gr_cvsd_vocoder_LIBDIRPATH = @gr_cvsd_vocoder_LIBDIRPATH@
gr_gcell_INCLUDEDIR = @gr_gcell_INCLUDEDIR@
gr_gcell_INCLUDES = @gr_gcell_INCLUDES@
gr_gcell_LA = @gr_gcell_LA@
gr_gcell_LDFLAG = @gr_gcell_LDFLAG@
gr_gcell_LIBDIRPATH = @gr_gcell_LIBDIRPATH@
gr_gpio_INCLUDEDIR = @gr_gpio_INCLUDEDIR@
gr_gpio_INCLUDES = @gr_gpio_INCLUDES@
gr_gpio_LA = @gr_gpio_LA@
gr_gpio_LDFLAG = @gr_gpio_LDFLAG@
gr_gpio_LIBDIRPATH = @gr_gpio_LIBDIRPATH@
gr_gsm_fr_vocoder_INCLUDEDIR = @gr_gsm_fr_vocoder_INCLUDEDIR@
gr_gsm_fr_vocoder_INCLUDES = @gr_gsm_fr_vocoder_INCLUDES@
gr_gsm_fr_vocoder_LA = @gr_gsm_fr_vocoder_LA@
gr_gsm_fr_vocoder_LDFLAG = @gr_gsm_fr_vocoder_LDFLAG@
gr_gsm_fr_vocoder_LIBDIRPATH = @gr_gsm_fr_vocoder_LIBDIRPATH@
gr_libdir_suffix = @gr_libdir_suffix@
gr_msdd6000_INCLUDEDIR = @gr_msdd6000_INCLUDEDIR@
gr_msdd6000_INCLUDES = @gr_msdd6000_INCLUDES@
gr_msdd6000_LA = @gr_msdd6000_LA@
gr_msdd6000_LDFLAG = @gr_msdd6000_LDFLAG@
gr_msdd6000_LIBDIRPATH = @gr_msdd6000_LIBDIRPATH@
gr_noaa_INCLUDEDIR = @gr_noaa_INCLUDEDIR@
gr_noaa_INCLUDES = @gr_noaa_INCLUDES@
gr_noaa_LA = @gr_noaa_LA@
gr_noaa_LDFLAG = @gr_noaa_LDFLAG@
gr_noaa_LIBDIRPATH = @gr_noaa_LIBDIRPATH@
gr_pager_INCLUDEDIR = @gr_pager_INCLUDEDIR@
gr_pager_INCLUDES = @gr_pager_INCLUDES@
gr_pager_LA = @gr_pager_LA@
gr_pager_LDFLAG = @gr_pager_LDFLAG@
gr_pager_LIBDIRPATH = @gr_pager_LIBDIRPATH@
gr_qtgui_INCLUDEDIR = @gr_qtgui_INCLUDEDIR@
gr_qtgui_INCLUDES = @gr_qtgui_INCLUDES@
gr_qtgui_LA = @gr_qtgui_LA@
gr_qtgui_LDFLAG = @gr_qtgui_LDFLAG@
gr_qtgui_LIBDIRPATH = @gr_qtgui_LIBDIRPATH@
gr_radar_mono_INCLUDEDIR = @gr_radar_mono_INCLUDEDIR@
gr_radar_mono_INCLUDES = @gr_radar_mono_INCLUDES@
gr_radar_mono_LA = @gr_radar_mono_LA@
gr_radar_mono_LDFLAG = @gr_radar_mono_LDFLAG@
gr_radar_mono_LIBDIRPATH = @gr_radar_mono_LIBDIRPATH@
gr_radio_astronomy_INCLUDEDIR = @gr_radio_astronomy_INCLUDEDIR@
gr_radio_astronomy_INCLUDES = @gr_radio_astronomy_INCLUDES@
gr_radio_astronomy_LA = @gr_radio_astronomy_LA@
gr_radio_astronomy_LDFLAG = @gr_radio_astronomy_LDFLAG@
gr_radio_astronomy_LIBDIRPATH = @gr_radio_astronomy_LIBDIRPATH@
gr_sounder_INCLUDEDIR = @gr_sounder_INCLUDEDIR@
gr_sounder_INCLUDES = @gr_sounder_INCLUDES@
gr_sounder_LA = @gr_sounder_LA@
gr_sounder_LDFLAG = @gr_sounder_LDFLAG@
gr_sounder_LIBDIRPATH = @gr_sounder_LIBDIRPATH@
gr_trellis_INCLUDEDIR = @gr_trellis_INCLUDEDIR@
gr_trellis_INCLUDES = @gr_trellis_INCLUDES@
gr_trellis_LA = @gr_trellis_LA@
gr_trellis_LDFLAG = @gr_trellis_LDFLAG@
gr_trellis_LIBDIRPATH = @gr_trellis_LIBDIRPATH@
gr_usrp2_INCLUDEDIR = @gr_usrp2_INCLUDEDIR@
gr_usrp2_INCLUDES = @gr_usrp2_INCLUDES@
gr_usrp2_LA = @gr_usrp2_LA@
gr_usrp2_LDFLAG = @gr_usrp2_LDFLAG@
gr_usrp2_LIBDIRPATH = @gr_usrp2_LIBDIRPATH@
gr_usrp_INCLUDEDIR = @gr_usrp_INCLUDEDIR@
gr_usrp_INCLUDES = @gr_usrp_INCLUDES@
gr_usrp_LA = @gr_usrp_LA@
gr_usrp_LDFLAG = @gr_usrp_LDFLAG@
gr_usrp_LIBDIRPATH = @gr_usrp_LIBDIRPATH@
gr_utils_INCLUDEDIR = @gr_utils_INCLUDEDIR@
gr_utils_INCLUDES = @gr_utils_INCLUDES@
gr_utils_LA = @gr_utils_LA@
gr_utils_LDFLAG = @gr_utils_LDFLAG@
gr_utils_LIBDIRPATH = @gr_utils_LIBDIRPATH@
gr_video_sdl_INCLUDEDIR = @gr_video_sdl_INCLUDEDIR@
gr_video_sdl_INCLUDES = @gr_video_sdl_INCLUDES@
gr_video_sdl_LA = @gr_video_sdl_LA@
gr_video_sdl_LDFLAG = @gr_video_sdl_LDFLAG@
gr_video_sdl_LIBDIRPATH = @gr_video_sdl_LIBDIRPATH@
gr_wxgui_INCLUDEDIR = @gr_wxgui_INCLUDEDIR@
gr_wxgui_INCLUDES = @gr_wxgui_INCLUDES@
gr_wxgui_LA = @gr_wxgui_LA@
gr_wxgui_LDFLAG = @gr_wxgui_LDFLAG@
gr_wxgui_LIBDIRPATH = @gr_wxgui_LIBDIRPATH@
grc_INCLUDEDIR = @grc_INCLUDEDIR@
grc_INCLUDES = @grc_INCLUDES@
grc_LA = @grc_LA@
grc_LDFLAG = @grc_LDFLAG@
grc_LIBDIRPATH = @grc_LIBDIRPATH@
gruel_INCLUDEDIR = @gruel_INCLUDEDIR@
gruel_INCLUDES = @gruel_INCLUDES@
gruel_LA = @gruel_LA@
gruel_LDFLAG = @gruel_LDFLAG@
gruel_LIBDIRPATH = @gruel_LIBDIRPATH@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lf_CFLAGS = @lf_CFLAGS@
lf_CXXFLAGS = @lf_CXXFLAGS@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mblock_INCLUDEDIR = @mblock_INCLUDEDIR@
mblock_INCLUDES = @mblock_INCLUDES@
mblock_LA = @mblock_LA@
mblock_LDFLAG = @mblock_LDFLAG@
mblock_LIBDIRPATH = @mblock_LIBDIRPATH@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
omnithread_INCLUDEDIR = @omnithread_INCLUDEDIR@
omnithread_INCLUDES = @omnithread_INCLUDES@
omnithread_LA = @omnithread_LA@
omnithread_LDFLAG = @omnithread_LDFLAG@
omnithread_LIBDIRPATH = @omnithread_LIBDIRPATH@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
skipped_dirs = @skipped_dirs@
srcdir = @srcdir@
subdirs = @subdirs@
swig_CXXFLAGS = @swig_CXXFLAGS@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
usrp2_INCLUDEDIR = @usrp2_INCLUDEDIR@
usrp2_INCLUDES = @usrp2_INCLUDES@
usrp2_LA = @usrp2_LA@
usrp2_LDFLAG = @usrp2_LDFLAG@
usrp2_LIBDIRPATH = @usrp2_LIBDIRPATH@
usrp_INCLUDEDIR = @usrp_INCLUDEDIR@
usrp_INCLUDES = @usrp_INCLUDES@
usrp_LA = @usrp_LA@
usrp_LDFLAG = @usrp_LDFLAG@
usrp_LIBDIRPATH = @usrp_LIBDIRPATH@
usrp_darwin_omnithread_pc_requires = @usrp_darwin_omnithread_pc_requires@
vrt_INCLUDEDIR = @vrt_INCLUDEDIR@
vrt_INCLUDES = @vrt_INCLUDES@
vrt_LA = @vrt_LA@
vrt_LDFLAG = @vrt_LDFLAG@
vrt_LIBDIRPATH = @vrt_LIBDIRPATH@
with_INCLUDES = @with_INCLUDES@
with_LIBDIRPATH = @with_LIBDIRPATH@
with_PYDIRPATH = @with_PYDIRPATH@
with_SWIGDIRPATH = @with_SWIGDIRPATH@
with_SWIG_INCLUDES = @with_SWIG_INCLUDES@
with_dirs = @with_dirs@
AM_CFLAGS = -O3 -g --std=gnu99 -fstrict-aliasing $(C_WARNINGS)
AM_CXXFLAGS = @autoconf_default_CXXFLAGS@ @lf_CXXFLAGS@

# includes
grincludedir = $(includedir)/gnuradio

# swig includes
@PYTHON_TRUE@swigincludedir = $(grincludedir)/swig

# Install the gnuradio stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/gnuradio
@PYTHON_TRUE@grpythondir = $(pythondir)/gnuradio
@PYTHON_TRUE@grpyexecdir = $(pyexecdir)/gnuradio

# Install the non-gnuradio usrp stuff in the appropriate subdirectory
# This usually ends up at:
#   ${prefix}/lib/python${python_version}/site-packages/usrpm
@PYTHON_TRUE@usrppythondir = $(pythondir)/usrpm
@PYTHON_TRUE@usrppyexecdir = $(pyexecdir)/usrpm

# gcell includes
gcellincludedir = $(includedir)/gcell
gcellspuincludedir = $(includedir)/gcell/spu

# Cell spu libs
libspudir = $(libdir)spu

# This used to be set in configure.ac but is now defined here for all 
# Makefiles when this fragment is included.
STD_DEFINES_AND_INCLUDES = $(DEFINES) $(BOOST_CPPFLAGS) \
	$(OMNITHREAD_INCLUDES) $(GNURADIO_INCLUDES) $(GRUEL_INCLUDES)


# when including for compilation from pre-installed libraries and such,
# need to make sure those are put last on the compile command
WITH_INCLUDES = @with_INCLUDES@
WITH_SWIG_INCLUDES = @with_SWIG_INCLUDES@

# How to link in the top-level omnithreads library from inside the tree
OMNITHREAD_INCLUDES = @omnithread_INCLUDES@
OMNITHREAD_LA = @omnithread_LA@

# Where to find gnuradio include files in the current build tree
# top_srcdir for original stuff, top_builddir for generated files
GNURADIO_INCLUDES = @gnuradio_core_INCLUDES@

# How to link in GNU Radio core library from inside the tree
GNURADIO_CORE_LA = @gnuradio_core_LA@

# How to link in the USRP library from inside the tree
GRUEL_INCLUDES = @gruel_INCLUDES@
GRUEL_LA = @gruel_LA@

# How to link in the USRP library from inside the tree
USRP_INCLUDES = @usrp_INCLUDES@
USRP_LA = @usrp_LA@

# How to link the mblock library from inside the tree
MBLOCK_INCLUDES = @mblock_INCLUDES@
MBLOCK_LA = @mblock_LA@

# How to link the gcell library from inside the tree (the PPU part)
GCELL_INCLUDES = @gcell_INCLUDES@
GCELL_LA = @gcell_LA@

# How to link the gcell library from inside the tree (the SPU part)
GCELL_SPU_INCLUDES = @gcell_spu_INCLUDES@
GCELL_SPU_LA = @gcell_spu_LA@

# libtool aware wrapper for ppu-embedspu
GCELL_EMBEDSPU_LIBTOOL = @abs_top_srcdir@/gcell/lib/runtime/gcell-embedspu-libtool

# Fix for BSD make not defining $(RM).  We define it now in configure.ac
# using AM_PATH_PROG, but now here have to add a -f to be like GNU make
RM = $(RM_PROG) -f
RUN_GUILE = GUILE_LOAD_PATH="@abs_top_srcdir@/gruel/src/scheme:@abs_top_srcdir@/mblock/src/scheme" @GUILE@ -e main -s
COMPILE_MBH = $(RUN_GUILE) $(top_srcdir)/mblock/src/scheme/gnuradio/compile-mbh.scm

# Base directory for example applications
exampledir = $(datadir)/gnuradio/examples
gr_docdir = $(docdir)-$(DOCVER)

# System configuration files
gr_prefsdir = $(GR_PREFSDIR)

# Data directory for grc block wrappers
grc_blocksdir = $(pkgdatadir)/grc/blocks

# Other common defines; use "+=" to add to these
STAMPS = 
MOSTLYCLEANFILES = $(BUILT_SOURCES) $(STAMPS) *.pyc *.pyo *~ *.tmp *.loT
C_WARNINGS = \
  -Wall -Wextra -Wstrict-prototypes -Werror-implicit-function-declaration

IBM_SPU_SYNC_INCLUDES = -I$(top_srcdir)/gcell/ibm/sync/spu_source
AM_CPPFLAGS = $(GCELL_SPU_INCLUDES) $(IBM_SPU_SYNC_INCLUDES)
libspu_LIBRARIES = libgcell_spu.a

# ----------------------------------------------------------------
# files in the lib/runtime/spu directory
runtime_srcdir = $(srcdir)/../runtime/spu
runtime_spu_sources = \
	$(runtime_srcdir)/gc_delay.c \
	$(runtime_srcdir)/gc_spu_jd_queue.c \
	$(runtime_srcdir)/spu_buffers.c \
	$(runtime_srcdir)/gc_logging.c \
	$(runtime_srcdir)/gc_main.c \
	$(runtime_srcdir)/gc_random.c

runtime_spu_headers = 
runtime_spu_noinst_headers = \
	$(runtime_srcdir)/gc_spu_config.h \
	$(runtime_srcdir)/spu_buffers.h 


# ----------------------------------------------------------------
# files in the lib/general/spu directory
general_srcdir = $(srcdir)/../general/spu
general_spu_sources = \
	$(general_srcdir)/fft_1d_r2.c \
	$(general_srcdir)/memset.S

general_spu_headers = 
# These now live in include/gcell/spu
#general_spu_headers = \
#	$(general_srcdir)/gc_spu_macs.h \
#	$(general_srcdir)/libfft.h
general_spu_noinst_headers = 
# As do these
#general_spu_noinst_headers = \
#	$(general_srcdir)/fft_1d.h \
#	$(general_srcdir)/fft_1d_r2.h

# The QA code for (usually) non-PPE visible support routines in lib/general/spu
general_spu_qa_sources = \
	$(general_srcdir)/qa_memset.c


# ----------------------------------------------------------------
# files in the lib/wrapper/spu directory
wrapper_srcdir = $(srcdir)/../wrapper/spu
wrapper_spu_sources = \
	$(wrapper_srcdir)/gcs_fft_1d_r2.c

wrapper_spu_headers = 
wrapper_spu_noinst_headers = 

# ----------------------------------------------------------------
# build the library from the files in the three directories
libgcell_spu_a_SOURCES = \
	$(runtime_spu_sources) \
	$(general_spu_sources) \
	$(wrapper_spu_sources)

gcellspuinclude_HEADERS = \
	$(runtime_spu_headers) \
	$(general_spu_headers) \
	$(wrapper_spu_headers)

noinst_HEADERS = \
	$(runtime_spu_noinst_headers) \
	$(general_spu_noinst_headers) \
	$(wrapper_spu_noinst_headers)


#
# All known non-QA gcell procs (at least until they get too big).
#
gcell_all_SOURCES = $(wrapper_spu_sources)
gcell_all_LDADD = libgcell_spu.a

#
# The QA code required for testing the runtime.
#
gcell_runtime_qa_SOURCES = $(runtime_srcdir)/gcell_runtime_qa.c
gcell_runtime_qa_LDADD = libgcell_spu.a

#
# The QA code required for testing the SPE support routines in lib/general/spu
#
gcell_general_qa_SOURCES = $(general_spu_qa_sources)
gcell_general_qa_LDADD = libgcell_spu.a
all: all-am

.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common.spu $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  gcell/lib/spu/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gcell/lib/spu/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libspuLIBRARIES: $(libspu_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libspudir)" || $(MKDIR_P) "$(DESTDIR)$(libspudir)"
	@list='$(libspu_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libspuLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libspudir)/$$f'"; \
	    $(libspuLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libspudir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(libspu_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libspudir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libspudir)/$$p"; \
	  else :; fi; \
	done

uninstall-libspuLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(libspu_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libspudir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libspudir)/$$p"; \
	done

clean-libspuLIBRARIES:
	-test -z "$(libspu_LIBRARIES)" || rm -f $(libspu_LIBRARIES)
libgcell_spu.a: $(libgcell_spu_a_OBJECTS) $(libgcell_spu_a_DEPENDENCIES) 
	-rm -f libgcell_spu.a
	$(libgcell_spu_a_AR) libgcell_spu.a $(libgcell_spu_a_OBJECTS) $(libgcell_spu_a_LIBADD)
	$(RANLIB) libgcell_spu.a
install-libspuPROGRAMS: $(libspu_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libspudir)" || $(MKDIR_P) "$(DESTDIR)$(libspudir)"
	@list='$(libspu_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libspuPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(libspudir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libspuPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(libspudir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-libspuPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libspu_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(libspudir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libspudir)/$$f"; \
	done

clean-libspuPROGRAMS:
	@list='$(libspu_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gcell_all$(EXEEXT): $(gcell_all_OBJECTS) $(gcell_all_DEPENDENCIES) 
	@rm -f gcell_all$(EXEEXT)
	$(LINK) $(gcell_all_OBJECTS) $(gcell_all_LDADD) $(LIBS)
gcell_general_qa$(EXEEXT): $(gcell_general_qa_OBJECTS) $(gcell_general_qa_DEPENDENCIES) 
	@rm -f gcell_general_qa$(EXEEXT)
	$(LINK) $(gcell_general_qa_OBJECTS) $(gcell_general_qa_LDADD) $(LIBS)
gcell_runtime_qa$(EXEEXT): $(gcell_runtime_qa_OBJECTS) $(gcell_runtime_qa_DEPENDENCIES) 
	@rm -f gcell_runtime_qa$(EXEEXT)
	$(LINK) $(gcell_runtime_qa_OBJECTS) $(gcell_runtime_qa_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fft_1d_r2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gc_delay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gc_logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gc_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gc_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gc_spu_jd_queue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gcell_runtime_qa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gcs_fft_1d_r2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qa_memset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spu_buffers.Po@am__quote@

.S.o:
@am__fastdepCCAS_TRUE@	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCCAS_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCCAS_FALSE@	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
@am__fastdepCCAS_TRUE@	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCCAS_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCCAS_FALSE@	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
@am__fastdepCCAS_TRUE@	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCCAS_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCCAS_FALSE@	$(LTCPPASCOMPILE) -c -o $@ $<

memset.o: $(general_srcdir)/memset.S
@am__fastdepCCAS_TRUE@	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT memset.o -MD -MP -MF $(DEPDIR)/memset.Tpo -c -o memset.o `test -f '$(general_srcdir)/memset.S' || echo '$(srcdir)/'`$(general_srcdir)/memset.S
@am__fastdepCCAS_TRUE@	mv -f $(DEPDIR)/memset.Tpo $(DEPDIR)/memset.Po
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	source='$(general_srcdir)/memset.S' object='memset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCCAS_FALSE@	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o memset.o `test -f '$(general_srcdir)/memset.S' || echo '$(srcdir)/'`$(general_srcdir)/memset.S

memset.obj: $(general_srcdir)/memset.S
@am__fastdepCCAS_TRUE@	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT memset.obj -MD -MP -MF $(DEPDIR)/memset.Tpo -c -o memset.obj `if test -f '$(general_srcdir)/memset.S'; then $(CYGPATH_W) '$(general_srcdir)/memset.S'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/memset.S'; fi`
@am__fastdepCCAS_TRUE@	mv -f $(DEPDIR)/memset.Tpo $(DEPDIR)/memset.Po
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	source='$(general_srcdir)/memset.S' object='memset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCCAS_FALSE@	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o memset.obj `if test -f '$(general_srcdir)/memset.S'; then $(CYGPATH_W) '$(general_srcdir)/memset.S'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/memset.S'; fi`

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

gc_delay.o: $(runtime_srcdir)/gc_delay.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_delay.o -MD -MP -MF $(DEPDIR)/gc_delay.Tpo -c -o gc_delay.o `test -f '$(runtime_srcdir)/gc_delay.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_delay.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_delay.Tpo $(DEPDIR)/gc_delay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_delay.c' object='gc_delay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_delay.o `test -f '$(runtime_srcdir)/gc_delay.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_delay.c

gc_delay.obj: $(runtime_srcdir)/gc_delay.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_delay.obj -MD -MP -MF $(DEPDIR)/gc_delay.Tpo -c -o gc_delay.obj `if test -f '$(runtime_srcdir)/gc_delay.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_delay.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_delay.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_delay.Tpo $(DEPDIR)/gc_delay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_delay.c' object='gc_delay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_delay.obj `if test -f '$(runtime_srcdir)/gc_delay.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_delay.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_delay.c'; fi`

gc_spu_jd_queue.o: $(runtime_srcdir)/gc_spu_jd_queue.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_spu_jd_queue.o -MD -MP -MF $(DEPDIR)/gc_spu_jd_queue.Tpo -c -o gc_spu_jd_queue.o `test -f '$(runtime_srcdir)/gc_spu_jd_queue.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_spu_jd_queue.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_spu_jd_queue.Tpo $(DEPDIR)/gc_spu_jd_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_spu_jd_queue.c' object='gc_spu_jd_queue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_spu_jd_queue.o `test -f '$(runtime_srcdir)/gc_spu_jd_queue.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_spu_jd_queue.c

gc_spu_jd_queue.obj: $(runtime_srcdir)/gc_spu_jd_queue.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_spu_jd_queue.obj -MD -MP -MF $(DEPDIR)/gc_spu_jd_queue.Tpo -c -o gc_spu_jd_queue.obj `if test -f '$(runtime_srcdir)/gc_spu_jd_queue.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_spu_jd_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_spu_jd_queue.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_spu_jd_queue.Tpo $(DEPDIR)/gc_spu_jd_queue.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_spu_jd_queue.c' object='gc_spu_jd_queue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_spu_jd_queue.obj `if test -f '$(runtime_srcdir)/gc_spu_jd_queue.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_spu_jd_queue.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_spu_jd_queue.c'; fi`

spu_buffers.o: $(runtime_srcdir)/spu_buffers.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spu_buffers.o -MD -MP -MF $(DEPDIR)/spu_buffers.Tpo -c -o spu_buffers.o `test -f '$(runtime_srcdir)/spu_buffers.c' || echo '$(srcdir)/'`$(runtime_srcdir)/spu_buffers.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/spu_buffers.Tpo $(DEPDIR)/spu_buffers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/spu_buffers.c' object='spu_buffers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spu_buffers.o `test -f '$(runtime_srcdir)/spu_buffers.c' || echo '$(srcdir)/'`$(runtime_srcdir)/spu_buffers.c

spu_buffers.obj: $(runtime_srcdir)/spu_buffers.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spu_buffers.obj -MD -MP -MF $(DEPDIR)/spu_buffers.Tpo -c -o spu_buffers.obj `if test -f '$(runtime_srcdir)/spu_buffers.c'; then $(CYGPATH_W) '$(runtime_srcdir)/spu_buffers.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/spu_buffers.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/spu_buffers.Tpo $(DEPDIR)/spu_buffers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/spu_buffers.c' object='spu_buffers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spu_buffers.obj `if test -f '$(runtime_srcdir)/spu_buffers.c'; then $(CYGPATH_W) '$(runtime_srcdir)/spu_buffers.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/spu_buffers.c'; fi`

gc_logging.o: $(runtime_srcdir)/gc_logging.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_logging.o -MD -MP -MF $(DEPDIR)/gc_logging.Tpo -c -o gc_logging.o `test -f '$(runtime_srcdir)/gc_logging.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_logging.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_logging.Tpo $(DEPDIR)/gc_logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_logging.c' object='gc_logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_logging.o `test -f '$(runtime_srcdir)/gc_logging.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_logging.c

gc_logging.obj: $(runtime_srcdir)/gc_logging.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_logging.obj -MD -MP -MF $(DEPDIR)/gc_logging.Tpo -c -o gc_logging.obj `if test -f '$(runtime_srcdir)/gc_logging.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_logging.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_logging.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_logging.Tpo $(DEPDIR)/gc_logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_logging.c' object='gc_logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_logging.obj `if test -f '$(runtime_srcdir)/gc_logging.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_logging.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_logging.c'; fi`

gc_main.o: $(runtime_srcdir)/gc_main.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_main.o -MD -MP -MF $(DEPDIR)/gc_main.Tpo -c -o gc_main.o `test -f '$(runtime_srcdir)/gc_main.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_main.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_main.Tpo $(DEPDIR)/gc_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_main.c' object='gc_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_main.o `test -f '$(runtime_srcdir)/gc_main.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_main.c

gc_main.obj: $(runtime_srcdir)/gc_main.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_main.obj -MD -MP -MF $(DEPDIR)/gc_main.Tpo -c -o gc_main.obj `if test -f '$(runtime_srcdir)/gc_main.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_main.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_main.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_main.Tpo $(DEPDIR)/gc_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_main.c' object='gc_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_main.obj `if test -f '$(runtime_srcdir)/gc_main.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_main.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_main.c'; fi`

gc_random.o: $(runtime_srcdir)/gc_random.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_random.o -MD -MP -MF $(DEPDIR)/gc_random.Tpo -c -o gc_random.o `test -f '$(runtime_srcdir)/gc_random.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_random.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_random.Tpo $(DEPDIR)/gc_random.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_random.c' object='gc_random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_random.o `test -f '$(runtime_srcdir)/gc_random.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gc_random.c

gc_random.obj: $(runtime_srcdir)/gc_random.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gc_random.obj -MD -MP -MF $(DEPDIR)/gc_random.Tpo -c -o gc_random.obj `if test -f '$(runtime_srcdir)/gc_random.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_random.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_random.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gc_random.Tpo $(DEPDIR)/gc_random.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gc_random.c' object='gc_random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gc_random.obj `if test -f '$(runtime_srcdir)/gc_random.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gc_random.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gc_random.c'; fi`

fft_1d_r2.o: $(general_srcdir)/fft_1d_r2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft_1d_r2.o -MD -MP -MF $(DEPDIR)/fft_1d_r2.Tpo -c -o fft_1d_r2.o `test -f '$(general_srcdir)/fft_1d_r2.c' || echo '$(srcdir)/'`$(general_srcdir)/fft_1d_r2.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/fft_1d_r2.Tpo $(DEPDIR)/fft_1d_r2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(general_srcdir)/fft_1d_r2.c' object='fft_1d_r2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft_1d_r2.o `test -f '$(general_srcdir)/fft_1d_r2.c' || echo '$(srcdir)/'`$(general_srcdir)/fft_1d_r2.c

fft_1d_r2.obj: $(general_srcdir)/fft_1d_r2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft_1d_r2.obj -MD -MP -MF $(DEPDIR)/fft_1d_r2.Tpo -c -o fft_1d_r2.obj `if test -f '$(general_srcdir)/fft_1d_r2.c'; then $(CYGPATH_W) '$(general_srcdir)/fft_1d_r2.c'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/fft_1d_r2.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/fft_1d_r2.Tpo $(DEPDIR)/fft_1d_r2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(general_srcdir)/fft_1d_r2.c' object='fft_1d_r2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft_1d_r2.obj `if test -f '$(general_srcdir)/fft_1d_r2.c'; then $(CYGPATH_W) '$(general_srcdir)/fft_1d_r2.c'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/fft_1d_r2.c'; fi`

gcs_fft_1d_r2.o: $(wrapper_srcdir)/gcs_fft_1d_r2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gcs_fft_1d_r2.o -MD -MP -MF $(DEPDIR)/gcs_fft_1d_r2.Tpo -c -o gcs_fft_1d_r2.o `test -f '$(wrapper_srcdir)/gcs_fft_1d_r2.c' || echo '$(srcdir)/'`$(wrapper_srcdir)/gcs_fft_1d_r2.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gcs_fft_1d_r2.Tpo $(DEPDIR)/gcs_fft_1d_r2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(wrapper_srcdir)/gcs_fft_1d_r2.c' object='gcs_fft_1d_r2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gcs_fft_1d_r2.o `test -f '$(wrapper_srcdir)/gcs_fft_1d_r2.c' || echo '$(srcdir)/'`$(wrapper_srcdir)/gcs_fft_1d_r2.c

gcs_fft_1d_r2.obj: $(wrapper_srcdir)/gcs_fft_1d_r2.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gcs_fft_1d_r2.obj -MD -MP -MF $(DEPDIR)/gcs_fft_1d_r2.Tpo -c -o gcs_fft_1d_r2.obj `if test -f '$(wrapper_srcdir)/gcs_fft_1d_r2.c'; then $(CYGPATH_W) '$(wrapper_srcdir)/gcs_fft_1d_r2.c'; else $(CYGPATH_W) '$(srcdir)/$(wrapper_srcdir)/gcs_fft_1d_r2.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gcs_fft_1d_r2.Tpo $(DEPDIR)/gcs_fft_1d_r2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(wrapper_srcdir)/gcs_fft_1d_r2.c' object='gcs_fft_1d_r2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gcs_fft_1d_r2.obj `if test -f '$(wrapper_srcdir)/gcs_fft_1d_r2.c'; then $(CYGPATH_W) '$(wrapper_srcdir)/gcs_fft_1d_r2.c'; else $(CYGPATH_W) '$(srcdir)/$(wrapper_srcdir)/gcs_fft_1d_r2.c'; fi`

qa_memset.o: $(general_srcdir)/qa_memset.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qa_memset.o -MD -MP -MF $(DEPDIR)/qa_memset.Tpo -c -o qa_memset.o `test -f '$(general_srcdir)/qa_memset.c' || echo '$(srcdir)/'`$(general_srcdir)/qa_memset.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/qa_memset.Tpo $(DEPDIR)/qa_memset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(general_srcdir)/qa_memset.c' object='qa_memset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qa_memset.o `test -f '$(general_srcdir)/qa_memset.c' || echo '$(srcdir)/'`$(general_srcdir)/qa_memset.c

qa_memset.obj: $(general_srcdir)/qa_memset.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qa_memset.obj -MD -MP -MF $(DEPDIR)/qa_memset.Tpo -c -o qa_memset.obj `if test -f '$(general_srcdir)/qa_memset.c'; then $(CYGPATH_W) '$(general_srcdir)/qa_memset.c'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/qa_memset.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/qa_memset.Tpo $(DEPDIR)/qa_memset.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(general_srcdir)/qa_memset.c' object='qa_memset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qa_memset.obj `if test -f '$(general_srcdir)/qa_memset.c'; then $(CYGPATH_W) '$(general_srcdir)/qa_memset.c'; else $(CYGPATH_W) '$(srcdir)/$(general_srcdir)/qa_memset.c'; fi`

gcell_runtime_qa.o: $(runtime_srcdir)/gcell_runtime_qa.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gcell_runtime_qa.o -MD -MP -MF $(DEPDIR)/gcell_runtime_qa.Tpo -c -o gcell_runtime_qa.o `test -f '$(runtime_srcdir)/gcell_runtime_qa.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gcell_runtime_qa.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gcell_runtime_qa.Tpo $(DEPDIR)/gcell_runtime_qa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gcell_runtime_qa.c' object='gcell_runtime_qa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gcell_runtime_qa.o `test -f '$(runtime_srcdir)/gcell_runtime_qa.c' || echo '$(srcdir)/'`$(runtime_srcdir)/gcell_runtime_qa.c

gcell_runtime_qa.obj: $(runtime_srcdir)/gcell_runtime_qa.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gcell_runtime_qa.obj -MD -MP -MF $(DEPDIR)/gcell_runtime_qa.Tpo -c -o gcell_runtime_qa.obj `if test -f '$(runtime_srcdir)/gcell_runtime_qa.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gcell_runtime_qa.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gcell_runtime_qa.c'; fi`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/gcell_runtime_qa.Tpo $(DEPDIR)/gcell_runtime_qa.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(runtime_srcdir)/gcell_runtime_qa.c' object='gcell_runtime_qa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gcell_runtime_qa.obj `if test -f '$(runtime_srcdir)/gcell_runtime_qa.c'; then $(CYGPATH_W) '$(runtime_srcdir)/gcell_runtime_qa.c'; else $(CYGPATH_W) '$(srcdir)/$(runtime_srcdir)/gcell_runtime_qa.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-gcellspuincludeHEADERS: $(gcellspuinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(gcellspuincludedir)" || $(MKDIR_P) "$(DESTDIR)$(gcellspuincludedir)"
	@list='$(gcellspuinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(gcellspuincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(gcellspuincludedir)/$$f'"; \
	  $(gcellspuincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(gcellspuincludedir)/$$f"; \
	done

uninstall-gcellspuincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(gcellspuinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(gcellspuincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(gcellspuincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libspudir)" "$(DESTDIR)$(libspudir)" "$(DESTDIR)$(gcellspuincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libspuLIBRARIES clean-libspuPROGRAMS \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-gcellspuincludeHEADERS \
	install-libspuLIBRARIES install-libspuPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gcellspuincludeHEADERS \
	uninstall-libspuLIBRARIES uninstall-libspuPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libspuLIBRARIES clean-libspuPROGRAMS clean-libtool \
	clean-noinstPROGRAMS ctags dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-gcellspuincludeHEADERS install-html install-html-am \
	install-info install-info-am install-libspuLIBRARIES \
	install-libspuPROGRAMS install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-gcellspuincludeHEADERS \
	uninstall-libspuLIBRARIES uninstall-libspuPROGRAMS


# Base directory for documentation (docdir undefined in autoconf < 1.60)
docdir ?= $(datadir)/doc/$(PACKAGE)

# Don't distribute the files defined in the variable 'no_dist_files'
dist-hook:
	@for file in $(no_dist_files); do \
		echo $(RM) $(distdir)/$$file; \
		$(RM) $(distdir)/$$file; \
	done;
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
